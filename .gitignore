# Компилированные / оптимизированные / DLL файлы
__pycache__/
*.py[cod]
*$py.class

# Расширения C
*.so

# Распределение / упаковка
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Обычно эти файлы записываются python-скриптом из шаблона
# перед тем, как PyInstaller создает exe, чтобы внедрить дату/другую информацию в него.
*.manifest
*.spec

# Логи установщика
pip-log.txt
pip-delete-this-directory.txt

# Отчеты модульного тестирования / покрытия кода
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Переводы
*.mo
*.pot

# Вещи Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Вещи Flask:
instance/
.webassets-cache

# Вещи Scrapy:
.scrapy

# Документация Sphinx
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы, возможно, захотите игнорировать эти файлы, так как код
# предназначен для работы в различных средах; в противном случае, включите их в:
# .python-version

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в систему контроля версий.
# Однако при совместной работе, если есть платформо-специфические зависимости или зависимости
# без поддержки на всех платформах, pipenv может установить зависимости, которые не работают, или не
# установить все необходимые зависимости.
#Pipfile.lock

# poetry
# Подобно Pipfile.lock, обычно рекомендуется включать poetry.lock в систему контроля версий.
# Это особенно рекомендуется для бинарных пакетов для обеспечения воспроизводимости, и чаще всего
# игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# PEP 582; используется, например, github.com/David-OConnor/pyflow
__pypackages__/

# Вещи Celery
celerybeat-schedule
celerybeat.pid

# Обработанные файлы SageMath
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# Анализатор статических типов pytype
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Специфический для JetBrains шаблон поддерживается в отдельном JetBrains.gitignore, который может быть
# найден по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный gitignore или объединен с этим файлом. Для более радикального
# варианта (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea:
#.idea/
